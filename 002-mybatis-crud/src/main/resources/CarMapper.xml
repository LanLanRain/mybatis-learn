<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace先随意写一个-->
<mapper namespace="car">

    <!--<insert id="insertCar">
        insert into t_car(car_num,brand,guide_price,produce_time,car_type) values(#{k1},#{k2},#{k3},#{k4},#{k5})
    </insert>-->

    <insert id="insertCar">
        insert into t_car(car_num,brand,guide_price,produce_time,car_type)
        values(#{carNum},#{brand},#{guidePrice},#{produceTime},#{carType})
    </insert>

    <insert id="insertCarByPOJO">
        <!--#{} 里写的是POJO的属性名-->
        insert into t_car(car_num,brand,guide_price,produce_time,car_type)
        values(#{carNum},#{brand},#{guidePrice},#{produceTime},#{carType})
    </insert>

    <!--    注意：当占位符只有一个的时候，${} 里面的内容可以随便写。-->
    <delete id="deleteByCarNum">
        delete from t_car where car_num = #{SuiBianXie}
    </delete>

    <update id="updateCarByPOJO">
        update t_car set
        car_num = #{carNum}, brand = #{brand},
        guide_price = #{guidePrice}, produce_time = #{produceTime},
        car_type = #{carType}
        where id = #{id}
    </update>

    <select id="selectCarById" resultType="com.lb.mybatis.pojo.Car">
        <!--如果当查询结果的字段名和java类的属性名对应不上的话，可以采用as关键字起别名-->
        <!--select * from t_car where id = #{id}-->
        select
        id, car_num as carNum, brand, guide_price as guidePrice, produce_time as produceTime, car_type as carType
        from t_car where id = #{id}
    </select>

    <!--虽然结果是List集合，但是resultType属性需要指定的是List集合中元素的类型。-->
    <select id="selectCarAll" resultType="com.lb.mybatis.pojo.Car">
        <!--记得使用as起别名，让查询结果的字段名和java类的属性名对应上。-->
        select
        id, car_num as carNum, brand, guide_price as guidePrice, produce_time as produceTime, car_type as carType
        from
        t_car
    </select>
</mapper>